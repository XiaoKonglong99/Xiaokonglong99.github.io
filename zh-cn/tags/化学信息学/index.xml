<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>化学信息学 - 标签 - 小恐龙的自留地</title>
        <link>/zh-cn/tags/%E5%8C%96%E5%AD%A6%E4%BF%A1%E6%81%AF%E5%AD%A6/</link>
        <description>化学信息学 - 标签 - 小恐龙的自留地</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 11 Aug 2024 17:25:35 &#43;0200</lastBuildDate><atom:link href="/zh-cn/tags/%E5%8C%96%E5%AD%A6%E4%BF%A1%E6%81%AF%E5%AD%A6/" rel="self" type="application/rss+xml" /><item>
    <title>使用ChEMBL Python API 搜索化合物信息</title>
    <link>/zh-cn/chembl/</link>
    <pubDate>Sun, 11 Aug 2024 17:25:35 &#43;0200</pubDate>
    <author>小恐龙 | Little Dinosaur</author>
    <guid>/zh-cn/chembl/</guid>
    <description><![CDATA[前言 ChEMBL 算是各位化学从业者喜闻乐见的数据库。（因为他不要钱） 但是如果我们想要批量收集我们想要的内容，用网页版挨个寻找属实有点麻烦了。那么，有没有什么方法能够批量 且自动获取我们想要的分子信息呢？
其实除了我们熟知的ChEMBL网页 ， ChEMBL 还贴心的提供了可以用Python 搜索的 ChEMBL web service client 服务。只要我们在Python代码中输入想要的关键词，就可以批量搜索到我们想要的内容然后保存为CSV 文件用于后续处理。（比如赛博炼丹）
应用实例 一位励志发JACS的同学希望收集ChEMBL上杂环化合物Heterocyclic compound的 溶解度Solubility数据，我们应该怎么找呢？
示例代码：
首先 安装chembl_webresource_client 包
1 ! pip install chembl_webresource_client 然后运行这一段代码
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 import csv from chembl_webresource_client.]]></description>
</item>
<item>
    <title>使用RDKit生成无背景的化学结构式--附Python代码</title>
    <link>/zh-cn/transparent/</link>
    <pubDate>Mon, 05 Aug 2024 21:51:01 &#43;0200</pubDate>
    <author>小恐龙 | Little Dinosaur</author>
    <guid>/zh-cn/transparent/</guid>
    <description><![CDATA[前言
笔者发现传统的用RDKit画图画出来有白色背景，放在PowerPoint里面很不爽。参考了这一篇文献找到了代码。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 from rdkit import Chem from rdkit import rdBase from rdkit.Chem import Draw from rdkit.Chem.Draw import rdMolDraw2D from rdkit.Chem import rdDepictor rdDepictor.SetPreferCoordGen(True) from rdkit.Chem import rdMolDescriptors from rdkit.Chem import rdFMCS from rdkit import DataStructs import io from PIL import Image def show_png(data): bio = io.BytesIO(data) img = Image.]]></description>
</item>
</channel>
</rss>
